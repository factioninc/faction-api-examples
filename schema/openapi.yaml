openapi: 3.0.3
info:
  title: Faction Public APIs
  description: "\xA9 2023 Faction, Inc. All rights reserved\n\nWelcome to the Faction\
    \ Public APIs!  Our Faction Public APIs allow us and our customers to configure,\
    \ provision, and monitor Faction infrastructure.  Faction uses these APIs to build\
    \ our portal [https://portal.factioninc.com](https://portal.factioninc.com) and\
    \ can also be used by our customers with their systems to create a seamless integration\
    \ with Faction.\n\nThe hierarchical structure of our APIs is by **version** (e.g.,\
    \ v1, v2) and **namespace** (e.g., fix).\n\nOur version approach is to only create\
    \ a new API when it breaks backward compatibility.  Hence, a new version will\
    \ NOT be a complete copy of all of the previous version APIs, but only those that\
    \ have changed\n\nNamespaces are a way we group our APIs by common functionality.\
    \ This grouping makes it easier to discover the right API for the functionality\
    \ you wish to use.\n\nWe also have a public Github repository where you can fork\
    \ to run some of client API code (in Python) and the complete OpenAPI 3 spec we\
    \ use to build and deploy our APIs.  Our repo is located here: [https://github.com/factioninc/faction-api-examples](https://github.com/factioninc/faction-api-examples)\n\
    \nOur current Public APIs contain the following versions and namespaces:\n\n\n\
    \n| Version | Namespace     | Description                                    \
    \              |\n| ------- | ------------- | ------------------------------------------------------------\
    \ |\n| v1      | organizations | Provides information about organizations.   \
    \                 |\n| v1      | ccv           | Provides information about ccv\
    \ (Cloud Control Volumes) |\n| v2      | fix            | Provides information\
    \ about fix (Faction Internetwork eXchange) connections |\n"
  version: v1 and v2
servers:
- url: https://api.factioninc.com
paths:
  /v1/organizations:
    get:
      summary: Get list of organizations
      description: Provides a list of organizations.  This could be a list of all
        organizations, the current organization, or a list of assigned organizations
        (for OEMs) based on the user access level.
      operationId: organizationsGet
      tags:
      - Organizations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
              example:
              - identifier: 23f8bfa4-3737-44b6-a74e-0603a01fc25a
                name: ACME Corporation
                orgCode: ACME
                pingPopulationId: 1d0aa3fc-1d1f-4ea2-a21f-18ffea350df2
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - defaultAuthorizer: []
  /v1/organizations/{organizationId}:
    get:
      summary: Get organization
      description: Returns the information on a single organization, based on the
        Organization Identifier provided.
      operationId: organizationIdGet
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - $ref: '#/components/parameters/X-Organization-Id'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              example:
                identifier: 23f8bfa4-3737-44b6-a74e-0603a01fc25a
                name: ACME Corporation
                orgCode: ACME
                pingPopulationId: 1d0aa3fc-1d1f-4ea2-a21f-18ffea350df2
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
      security:
      - orgContextAuthorizer: []
  /v1/organizations/{organizationId}/roles:
    get:
      tags:
      - Organizations
      summary: Get organization's roles
      description: "Gets the roles available to the organization. Roles are assigned\
        \ to users to control their permissions.\nThere are two categories of roles:\
        \ Portal roles and VPN roles.\n\nPortal roles control the actions available\
        \ in the Faction portal.\nThe possible portal roles are:\n  - <b>User:</b>\
        \ Enables read access\n  - <b>Technician:</b> Enables write access \n  - <b>Org_Admin:</b>\
        \ Enables user management\n  - <b>Group_Admin:</b> Enables multiple organization\
        \ management \n\nVPN roles determine which VPNs a user can access. \n"
      operationId: organizationRolesGet
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
              example:
                portalRoles:
                - User
                - Technician
                - Org_Admin
                - Group_Admin
                vpnRoles:
                - vpn_dc15_e01
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
  /v1/organizations/{organizationId}/sso:
    get:
      summary: Get SSO configuration
      description: Gets an organization's Single Sign-On (SSO) configuration.
      operationId: ssoGet
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSOGet'
              example:
                clientId: xddr5-678
                clientSecret: mysecret
                discoveryUri: https://example.com/discovery
                email: providerAttributes.email
                externalAuthorization: externalAuthorization
                userName: providerAttributes.sub
                callbackUrl: https://auth.factiondev.com/rp/callback/openid_connect
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
    post:
      summary: Enable Single Sign-On (SSO)
      description: "Enables Single Sign-On (SSO) through an OpenID Connect (OIDC)\
        \ identity provider.\nThe request body should contain the information necessary\
        \ to configure the OIDC identity provider. \nThe configuration includes mapping\
        \ the attributes provided by your OIDC application \nto userName and email\
        \ attributes used by the Faction portal. \n- <b>clientId:</b> The client ID\
        \ of your OIDC application \n- <b>discoveryUri:</b> Your OIDC application's\
        \ discovery URI\n- <b>clientSecret:</b> The client secret of your OIDC application\n\
        - <b>userName:</b> Attribute from your OIDC application which will be used\
        \ as Faction portal username\n- <b>email:</b> Attribute from your OIDC application\
        \ which will be used as Faction portal email\n- <b>externalAuthorization:</b>\
        \ Attribute from your OIDC application which will be used to\n  determine\
        \ users' Faction portal group membership\n- <b>mfaAttest:</b> By providing\
        \ a value of \"true\", you attest that the identity provider \n  configured\
        \ in this request requires multi-factor authentication (MFA).\n"
      operationId: ssoPost
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSOPostBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SPCallBack'
              example:
                clientId: xddr5-678
                clientSecret: mysecret
                discoveryUri: https://example.com/discovery
                userName: providerAttributes.sub
                email: providerAttributes.email
                externalAuthorization: externalAuthorization
                mfaAttest: true
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
    put:
      summary: Update Single Sign-On (SSO) configuration
      description: "Updates Single Sign-On (SSO) configuration for and organization.\
        \ \nSee `POST /{organizationId}/sso` for a description of the values \nin\
        \ the request body.\n"
      operationId: ssoPut
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSO'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSO'
              example:
                clientId: xddr5-678
                clientSecret: mysecret
                discoveryUri: https://example.com/discovery
                userName: providerAttributes.sub
                email: providerAttributes.email
                externalAuthorization: externalAuthorization
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
    delete:
      summary: Disable Single Sign-On (SSO)
      description: 'Disables Single Sign-On (SSO) for an organization.

        '
      operationId: ssoDelete
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSODeleted'
              example:
                ssoDeleted: true
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
  /v1/organizations/{organizationId}/sso/groups:
    get:
      summary: Get list of organization's SSO groups
      description: "Provides a list of the organization's SSO groups. \n\nSSO groups\
        \ are used to \nautomatically assign users' roles based on their external\
        \ authorizaitons.\nAny user with an external authorization which matches an\
        \ SSO group's `groupName` \nwill be added to that group and assigned the roles\
        \ associated with that group.\nExternal authorizations are provided by the\
        \ organization's identity provider \nas configured by the `/{organizationId}/sso`\
        \ endpoint.\n"
      operationId: ssoGroupsGet
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Groups'
              example:
              - groupName: Portal_Users
                identifier: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                roles:
                - User
                - Technician
                - vpn_dc15_e01
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
    post:
      summary: Create SSO group
      description: "Creates an SSO group. \n\nSSO groups are used to \nautomatically\
        \ assign users' roles based on their external authorizaitons.\nAny user with\
        \ an external authorization which matches an SSO group's `groupName` \nwill\
        \ be added to that group and assigned the roles associated with that group.\n\
        External authorizations are provided by the organization's identity provider\
        \ \nas configured by the `/{organizationId}/sso` endpoint.\n"
      operationId: ssoGroupsPost
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Groups'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
              example:
                identifier: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                groupName: Portal_Users
                roles:
                - User
                - Technician
                - vpn_dc15_e01
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
  /v1/organizations/{organizationId}/sso/groups/{groupId}:
    delete:
      summary: Delete SSO group
      description: Deletes the SSO group with ID `groupId`.
      operationId: ssoGroupIdDelete
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: groupId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDeleted'
              example:
                groupDeleted: true
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
    put:
      summary: Update SSO group
      description: "Updates the SSO group with ID `groupId`.\n\nSSO groups are used\
        \ to \nautomatically assign users' roles based on their external authorizaitons.\n\
        Any user with an external authorization which matches an SSO group's `groupName`\
        \ \nwill be added to that group and assigned the roles associated with that\
        \ group.\nExternal authorizations are provided by the organization's identity\
        \ provider \nas configured by the `/{organizationId}/sso` endpoint.\n"
      operationId: ssoGroupIdPut
      tags:
      - Organizations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: groupId
        in: path
        schema:
          type: string
          format: uuid
          nullable: false
        required: true
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Groups'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
              example:
                groupName: Portal_Users
                identifier: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                roles:
                - User
                - Technician
                - vpn_dc15_e01
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
  /v1/ccv/volumes:
    get:
      summary: Get all CCVs
      description: 'Returns a list of every Cloud Control Volume (CCV) provisioned
        for an organization based on the Organization Identifier

        provided in the X-Organization-Id header.

        '
      operationId: ccvVolumeGet
      tags:
      - CCVs
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CCV'
              example:
              - identifier: 57520ae8-23a2-4a4a-a0ee-deb229952c8f
                name: Example CCV v3
                type: File Scale Out
                tier: elite
                factionLocationId: DC15
                iops: 0
                iqns:
                - igns1
                - iqns2
                networks:
                - network1
                - network2
                sloThroughput: 25
                totalSizeInBytes: 4096
                usedSizeInBytes: 1024
                createdAt: '2020-01-30T08:30:00Z'
                version: V3
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
  /v1/ccv/volumes/{ccvId}:
    get:
      summary: Get CCV by ID
      description: 'Returns the information regarding a particular Cloud Control Volume
        (CCV)

        based on the Organization Identifier provided in the X-Organization-Id header.

        '
      operationId: ccvVolumeIdGet
      tags:
      - CCVs
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      - name: ccvId
        in: path
        schema:
          type: string
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CCV'
              example:
                identifier: 57520ae8-23a2-4a4a-a0ee-deb229952c8f
                name: Example CCV v3
                type: File Scale Out
                tier: elite
                factionLocationId: DC15
                iops: 0
                iqns:
                - igns1
                - iqns2
                networks:
                - network1
                - network2
                sloThroughput: 25
                totalSizeInBytes: 4096
                usedSizeInBytes: 1024
                createdAt: '2020-01-30T08:30:00Z'
                version: V3
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
  /v1/ccv/volumes/{ccvId}/metrics:
    get:
      summary: Get CCV metrics
      description: 'Gets the metrics for the Cloud Control Volume (CCV) with the provided
        ccvId.

        Metrics include the CCV status, total capacity in bytes, and used capacity
        in bytes.

        '
      operationId: ccvMetricsGet
      tags:
      - CCVs
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      - name: ccvId
        in: path
        schema:
          type: string
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CCVMetrics'
              example:
                health: healthy
                capacity:
                  total: 10
                  used: 1
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
          headers:
            Access-Control-Allow-Origin:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Methods:
              style: simple
              explode: false
              schema:
                type: string
            Access-Control-Allow-Headers:
              style: simple
              explode: false
              schema:
                type: string
  /v2/fix/connections:
    post:
      description: Create a new FIX Connection.
      summary: Create a new FIX Connection.
      operationId: create_connection
      tags:
      - FIX Connections
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFixConnection'
            examples:
              AwsExample:
                value:
                  connectionType: cloud
                  connectionData:
                    connectionSubType: aws_direct_connect
                    providerRegion: us-east-1
                    factionLocations:
                    - DC15
                    bandwidth: 12
                    accountId: exampleinc
                    crossCloud: true
              AzureExample:
                value:
                  connectionType: cloud
                  connectionData:
                    connectionSubType: azure_express_route_circuit
                    providerRegion: eastus
                    factionLocations:
                    - DC15
                    bandwidth: 5
              GoogleExample:
                value:
                  connectionType: cloud
                  connectionData:
                    connectionSubType: gcp_partner_interconnect
                    providerRegion: eastus
                    factionLocations:
                    - DC15
                    bandwidth: 2
                    pairingKey: key1
              OracleExample:
                value:
                  connectionType: cloud
                  connectionData:
                    connectionSubType: oci_fast_connect
                    providerRegion: eastus
                    factionLocations:
                    - DC15
                    bandwidth: 3
                    tenancy: secret1
                    localPeeringGateway: key1
              InternetExample:
                value:
                  connectionType: internet
                  connectionData:
                    factionLocations:
                    - DC15
                    bandwidth: 14
              InterRegionExample:
                value:
                  connectionType: interRegion
                  connectionData:
                    factionLocations:
                    - DC15
                    - CHI1
                    bandwidth: 14
              PrivateFacilityBackboneExample:
                value:
                  connectionType: private
                  connectionData:
                    connectionSubType: facility_backbone_connection
                    factionLocations:
                    - DC15
                    bandwidth: 5
              PrivateIntrafacilityExample:
                value:
                  connectionType: private
                  connectionData:
                    connectionSubType: intrafacility_cross_connect
                    factionLocations:
                    - DC15
                    bandwidth: 10
              PrivateSdnProviderExample:
                value:
                  connectionType: private
                  connectionData:
                    connectionSubType: sdn_provider_connection
                    factionLocations:
                    - DC15
                    bandwidth: 1
              PrivateTraditionalCircuitExample:
                value:
                  connectionType: private
                  connectionData:
                    connectionSubType: traditional_circuit
                    factionLocations:
                    - DC15
                    bandwidth: 10
      responses:
        '202':
          description: Success
          headers:
            Location:
              description: GET <url>/v1/fix/connections/{connectionId}/requests/{requestId}
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/FixConnection'
        '400':
          description: Error Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '401':
          description: Error Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    get:
      description: Returns a list of the Fix Connections.
      summary: Returns a list of the Fix Connections.
      operationId: get_connections
      tags:
      - FIX Connections
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FixConnection'
              examples:
                CloudTypeExample:
                  value:
                  - identifier: 00df8dfa-f1df-4af6-be2b-71d672256165
                    connectionType: cloud
                    connectionData:
                      bandwidth: 2
                      bandwidthUnits: gbps
                      connectionSubType: azure_express_route_circuit
                      factionLocations:
                      - DC15
                      providerRegion: us-east-1
                      crossCloud: false
                    active: true
                    state: Ready
                  - identifier: 00d6hhddfa-f1df-4af6-be2b-71d67246386467
                    connectionType: cloud
                    connectionData:
                      bandwidth: 5
                      bandwidthUnits: gbps
                      connectionSubType: aws_direct_connect
                      factionLocations:
                      - DC15
                      providerRegion: us-east-1
                      accountId: exampleinc
                      vifIds:
                      - gfhgdfjhd-yrueyr88
                      - 123-gggg
                      crossCloud: true
                    active: true
                    state: Ready
                  - identifier: d620e245-89cd-4a0d-b819-ffbd0f30781d
                    connectionType: cloud
                    connectionData:
                      bandwidth: 5
                      bandwidthUnits: gbps
                      connectionSubType: gcp_partner_interconnect
                      factionLocations:
                      - DC15
                      providerRegion: us-east-1
                      pairingKey: key1
                      crossCloud: false
                    active: true
                    state: Ready
                  - identifier: d9d6dd76-861f-4ac3-b960-16b8630515c4
                    connectionType: cloud
                    connectionData:
                      bandwidth: 5
                      bandwidthUnits: gbps
                      connectionSubType: oci_fast_connect
                      factionLocations:
                      - DC15
                      providerRegion: us-east-1
                      tenancy: ''
                      localPeeringGateway: ''
                      crossCloud: false
                    active: true
                    state: Ready
                PrivateTypeExample:
                  value:
                  - identifier: 00df8dfa-f1df-4af6-be2b-71d67225889
                    connectionType: private
                    connectionData:
                      bandwidth: 1
                      bandwidthUnits: gbps
                      connectionSubType: sdn_provider_connection
                      factionLocations:
                      - UK1
                    active: true
                    state: Ready
                  - identifier: 00df8dfa-f1df-4af6-be2b-71d67225889
                    connectionType: private
                    connectionData:
                      bandwidth: 1
                      bandwidthUnits: gbps
                      connectionSubType: facility_backbone_connection
                      factionLocations:
                      - UK1
                    active: true
                    state: Ready
                  - identifier: 00df8dfa-f1df-4af6-be2b-71d67225889
                    connectionType: private
                    connectionData:
                      bandwidth: 1
                      bandwidthUnits: gbps
                      connectionSubType: intrafacility_cross_connect
                      factionLocations:
                      - UK1
                    active: true
                    state: Ready
                  - identifier: 00df8dfa-f1df-4af6-be2b-71d67225889
                    connectionType: private
                    connectionData:
                      bandwidth: 1
                      bandwidthUnits: gbps
                      connectionSubType: traditional_circuit
                      factionLocations:
                      - UK1
                    active: true
                    state: Ready
                InternetTypeExample:
                  value:
                  - identifier: 00df8dfa-f1df-4af6-be2b-71d6722800089
                    connectionType: internet
                    connectionData:
                      bandwidth: 10
                      bandwidthUnits: gbps
                      factionLocations:
                      - UK1
                    active: true
                    state: Ready
                InterRegionTypeExample:
                  value:
                  - identifier: 00df8dfa-f1df-4af6-be2b-71d672277779
                    connectionType: interRegion
                    connectionData:
                      bandwidth: 5
                      bandwidthUnits: gbps
                      factionLocations:
                      - UK1
                      - FR7
                    active: true
                    state: Ready
        '401':
          description: Error Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v2/fix/connections/{connectionId}:
    get:
      description: Returns a single Fix Connection by Identifier.
      summary: Returns a single Fix Connection by Identifier.
      operationId: get_connection
      tags:
      - FIX Connections
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      - name: connectionId
        in: path
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixConnection'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    patch:
      description: Updates attributes of a single connection.
      summary: Updates attributes of a single connection.
      operationId: patch_connection
      tags:
      - FIX Connections
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      - name: connectionId
        in: path
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchFixConnection'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixConnection'
        '400':
          description: Error Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    delete:
      description: Removes an active connection.
      summary: Removes an active connection.
      operationId: delete_connection
      tags:
      - FIX Connections
      parameters:
      - name: X-Organization-Id
        in: header
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      - name: connectionId
        in: path
        schema:
          type: string
          nullable: false
          format: uuid
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixConnection'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
components:
  parameters:
    X-Organization-Id:
      description: Required Organization Id
      in: header
      name: X-Organization-Id
      schema:
        type: string
        format: uuid
        nullable: false
      required: true
  schemas:
    Organization:
      required:
      - name
      - identifier
      - orgCode
      type: object
      properties:
        orgCode:
          type: string
        identifier:
          type: string
          format: uuid
        name:
          type: string
        pingPopulationId:
          type: string
          format: uuid
      additionalProperties: false
      example:
        identifier: 23f8bfa4-3737-44b6-a74e-0603a01fc25a
        orgCode: ACME
        name: ACME Corporation
        pingPopulationId: 1d0aa3fc-1d1f-4ea2-a21f-18ffea350df2
    SSO:
      type: object
      required:
      - clientId
      - clientSecret
      - discoveryUri
      - userName
      - email
      - externalAuthorization
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        discoveryUri:
          type: string
        userName:
          type: string
          enum:
          - providerAttributes.sub
        email:
          type: string
          enum:
          - providerAttributes.email
        externalAuthorization:
          type: string
          enum:
          - externalAuthorization
      additionalProperties: false
      example:
        clientId: xddr5-678
        discoveryUri: https://example.com/discovery
        clientSecret: mysecret
        userName: providerAttributes.sub
        email: providerAttributes.email
        externalAuthorization: externalAuthorization
    SSOGet:
      allOf:
      - $ref: '#/components/schemas/SSO'
      - type: object
        properties:
          callbackUrl:
            type: string
        required:
        - callbackUrl
        example:
          callbackUrl: https://auth.factiondev.com/rp/callback/openid_connect
    SSOPostBody:
      allOf:
      - $ref: '#/components/schemas/SSO'
      - type: object
        properties:
          mfaAttest:
            type: boolean
        required:
        - mfaAttest
        example:
          mfaAttest: true
    Groups:
      required:
      - identifier
      - groupName
      - roles
      type: object
      properties:
        identifier:
          type: string
          format: uuid
        groupName:
          type: string
          example: Portal_Users
        roles:
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Role'
          example:
          - User
          - Technician
          - vpn_dc15_e01
    Role:
      anyOf:
      - $ref: '#/components/schemas/PortalRole'
      - type: string
        example: vpn_dc15_e01
    PortalRole:
      type: string
      enum:
      - User
      - Technician
      - Org_Admin
      - Group_Admin
    Roles:
      type: object
      properties:
        portalRoles:
          type: array
          items:
            $ref: '#/components/schemas/PortalRole'
          example:
          - User
          - Technician
          - Org_Admin
          - Group_Admin
        vpnRoles:
          type: array
          items:
            type: string
            example: vpn_dc15_e01
    GroupDeleted:
      type: boolean
      properties:
        Deleted:
          type: boolean
      example:
        groupDeleted: true
    SSODeleted:
      type: boolean
      properties:
        ssoDeleted:
          type: boolean
      example:
        ssoDeleted: true
    SPCallBack:
      type: string
      properties:
        SPcallBackUri:
          type: boolean
      example:
        SPcallBackUri: https://auth.pingone.com/51441281-305c-4e91-acc0-233470671c49/rp/callback/openid_connect
    ErrorDto:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: number
        error:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
      additionalProperties: false
      example:
        timestamp: '2021-01-30T08:30:00Z'
        status: 500
        error: Internal Server Error
        message: There was an unexpected error during your request
        detail: Here is as much info as we can provide
        path: /the/called/path-here
    ErrorNotFound:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: number
        error:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
      additionalProperties: false
      example:
        timestamp: '2021-01-30T08:30:00Z'
        status: 404
        error: Resource Not Found Error
        message: There was an unexpected error during your request
        detail: Here is as much info as we can provide
        path: /the/called/path-here
    ErrorUnauthorized:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: number
        error:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
      additionalProperties: false
      example:
        timestamp: '2021-01-30T08:30:00Z'
        status: 401
        error: Provided authorization information is invalid
        message: Unauthorized
        detail: Valid authorization bearer token is required
        path: /the/called/path-here
    CCV:
      required:
      - identifier
      - factionLocationId
      - iqns
      - name
      - networks
      type: object
      properties:
        identifier:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        type:
          type: string
        tier:
          type: string
        totalSizeInBytes:
          type: integer
          format: int64
          nullable: true
        usedSizeInBytes:
          type: integer
          format: int64
          nullable: true
        iops:
          minimum: 0
          type: number
          format: float
        sloThroughput:
          maximum: 9223372036854776000
          minimum: 0
          type: integer
          format: int64
        factionLocationId:
          maxLength: 36
          minLength: 0
          pattern: '[a-zA-Z0-9-_]+'
          type: string
        networks:
          minItems: 1
          type: array
          items:
            type: string
        iqns:
          type: array
          items:
            type: string
        currentOperationId:
          type: string
          format: uuid
          nullable: true
        createdDate:
          type: string
          format: date-time
          nullable: true
        version:
          $ref: '#/components/schemas/CCVVersion'
      additionalProperties: false
      example:
        identifier: 57520ae8-23a2-4a4a-a0ee-deb229952c8f
        name: Example CCV v3
        type: File Scale Out
        tier: elite
        totalSizeInBytes: 4096
        usedSizeInBytes: 1024
        iops: 0
        sloThroughput: 25
        factionLocationId: DC15
        networks:
        - network1
        - network2
        iqns:
        - igns1
        - iqns2
        version: V3
        createdAt: '2020-01-30T08:30:00Z'
    CCVVersion:
      type: string
      enum:
      - V2
      - V3
    CCVMetrics:
      type: object
      properties:
        health:
          $ref: '#/components/schemas/CCVHealthStatus'
        capacity:
          type: object
          properties:
            total:
              type: number
              example: 10
            used:
              type: number
              example: 1
    CCVHealthStatus:
      type: string
      enum:
      - healthy
      - unhealthy
    FactionConnectionLocations:
      type: array
      minItems: 1
      items:
        type: string
      example:
      - DC15
    CreateFixConnection:
      description: '## Current supported connection types:

        | connection | connection_type | connection_subtype |

        | :----------------- | :------- | :---------------- |

        | AWS Direct Connect | cloud | aws_direct_connect |

        | Azure ExpressRoute | cloud | azure_express_route |

        | GCP Partner Interconnect | cloud | gcp_partner_interconnect |

        | OCI Fast Connect | cloud | oci_fast_connect |

        | Facility Backbone | private | facility_backbone |

        | SDN Provider | private | sdn_provider |

        | Intrafacility | private | intrafacility |

        | Telco Circuit | private | traditional_circuit |

        | Internet | internet | |

        | InterRegion | interRegion | |

        '
      required:
      - connectionType
      - connectionData
      type: object
      properties:
        connectionType:
          $ref: '#/components/schemas/ConnectionType'
        connectionData:
          oneOf:
          - $ref: '#/components/schemas/CloudConnection'
          - $ref: '#/components/schemas/InternetConnection'
          - $ref: '#/components/schemas/InterRegionConnection'
          - $ref: '#/components/schemas/PrivateConnection'
      example:
        connectionType: cloud
        connectionData:
          connectionSubType: azure
          providerRegion: us-east-1
          factionLocations:
          - DC15
          bandwidth: 3
          crossCloud: true
    PatchFixConnection:
      type: object
      properties:
        bandwidth:
          description: Expected bandwidth in Gbps
          maximum: 1024
          minimum: 0
          type: number
        crossCloud:
          $ref: '#/components/schemas/crossCloudEnabled'
      example:
        bandwidth: 3
        crossCloud: true
    FixConnection:
      type: object
      properties:
        connectionType:
          $ref: '#/components/schemas/ConnectionType'
        connectionData:
          oneOf:
          - $ref: '#/components/schemas/CloudConnection'
          - $ref: '#/components/schemas/PrivateConnection'
          - $ref: '#/components/schemas/InternetConnection'
          - $ref: '#/components/schemas/InterRegionConnection'
        identifier:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/FixConnectionState'
        active:
          $ref: '#/components/schemas/Active'
        requestedChanges:
          type: object
    CloudConnection:
      description: '## A connection to a customer-subscribed cloud service provider.

        ---

        ### Current supported connections:

        - AWS Direct Connect (aws_direct_connect)

        - Azure ExpressRoute

        - Google Cloud Partner Interconnect

        - Oracle Cloud Fast Connect


        | connection_type | connection_subtype |

        |--|------|

        | cloud | aws_direct_connect |

        | cloud | azure_express_route |

        | cloud | gcp_partner_interconnect |

        | cloud | oci_fast_connect |

        ---

        '
      type: object
      properties:
        schema:
          oneOf:
          - $ref: '#/components/schemas/AwsFixConnection'
          - $ref: '#/components/schemas/AzureFixConnection'
          - $ref: '#/components/schemas/GcpFixConnection'
          - $ref: '#/components/schemas/OciFixConnection'
    AwsFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      - providerRegion
      - accountId
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          maximum: 1024
          minimum: 1
          example: 1
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - aws_direct_connect
          example: aws_direct_connect
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          example:
          - DC15
        providerRegion:
          type: string
          nullable: false
          example: us-east-1
        accountId:
          maxLength: 128
          minLength: 0
          type: string
          nullable: true
          example: 1111-1111-1111
        vifIds:
          type: array
          items:
            type: string
          example:
          - dxvif-ac12b4c5
        crossCloud:
          type: boolean
      additionalProperties: false
    AzureFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      - providerRegion
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          enum:
          - 1
          - 2
          - 5
          - 10
          example: 5
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - azure_express_route_circuit
          example: azure_express_route_circuit
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          example:
          - DC15
        providerRegion:
          type: string
          nullable: false
          example: eastus
        crossCloud:
          type: boolean
      additionalProperties: false
    GcpFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      - providerRegion
      - pairingKey
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          enum:
          - 1
          - 2
          - 5
          - 10
          - 20
          - 40
          example: 5
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - gcp_partner_interconnect
          example: gcp_partner_interconnect
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          example:
          - DC15
        pairingKey:
          type: string
          format: uuid
          example: a4eb67f4-a8fa-4ef2-ab6e-ccf03912a756
          description: 'Unique identifier to identify VLAN attachments for use with
            Partner Interconnect

            <br>[Cloud Interconnect terms - Pairing Key](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/terminology#pairingkey)

            '
        providerRegion:
          type: string
          nullable: false
          example: us-east1
        crossCloud:
          type: boolean
      additionalProperties: false
    OciFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      - providerRegion
      - tenancy
      - localPeeringGateway
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          enum:
          - 1
          - 2
          - 3
          - 5
          - 10
          - 20
          - 40
          example: 2
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - oci_fast_connect
          default: oci_fast_connect
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          minItems: 1
          maxItems: 1
          example:
          - DC15
        tenancy:
          maxLength: 255
          minLength: 0
          type: string
          format: ocid
          description: 'Oracle OCID for signing API requests.

            <br>*Format:*` ocid1.tenancy.oc1..<unique_ID>`

            <br>Ref: [Oracle Cloud Documentation](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle)

            '
        localPeeringGateway:
          type: string
          format: ocid
          description: 'Oracle OCID for Local Peering Gateway

            <br>Ref: [Oracle Cloud Documentation](https://docs.oracle.com/en-us/iaas/api/#/en/iaas/20160918/LocalPeeringGateway/)

            '
        providerRegion:
          type: string
          nullable: false
          example: us-ashburn-1
          description: 'Oracle region identifier

            <br>Ref: [Oracle - Region and Availability Domains](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm)

            '
        crossCloud:
          type: boolean
      additionalProperties: false
    PrivateConnection:
      type: object
      properties:
        schema:
          oneOf:
          - $ref: '#/components/schemas/FacilityBackboneFixConnection'
          - $ref: '#/components/schemas/IntrafacilityFixConnection'
          - $ref: '#/components/schemas/SdnProviderFixConnection'
          - $ref: '#/components/schemas/TraditionalCircuitFixConnection'
    FacilityBackboneFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          enum:
          - 1
          - 2
          - 5
          - 10
          - 20
          - 40
          example: 10
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - facility_backbone_connection
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          example:
          - DC15
    IntrafacilityFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          enum:
          - 1
          - 10
          - 100
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - intrafacility_cross_connect
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          example:
          - DC15
    SdnProviderFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          enum:
          - 1
          - 2
          - 5
          - 10
          - 40
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - sdn_provider_connection
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          example:
          - DC15
    TraditionalCircuitFixConnection:
      required:
      - bandwidth
      - connectionSubType
      - factionLocations
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          enum:
          - 1
          - 10
          - 100
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
        connectionSubType:
          type: string
          enum:
          - traditional_circuit
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          example:
          - DC15
    InternetConnection:
      required:
      - bandwidth
      - factionLocations
      type: object
      properties:
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          maximum: 100
          minimum: 1
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          maxItems: 1
          minItems: 1
          example:
          - DC15
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
    InterRegionConnection:
      required:
      - factionLocations
      - bandwidth
      type: object
      properties:
        factionLocations:
          type: array
          items:
            $ref: '#/components/schemas/FactionConnectionLocations'
          minItems: 2
          maxItems: 2
          example:
          - DC15
          - CHI1
        bandwidth:
          description: The connection throughput capacity. Units are defined in the
            bandwidthUnits property.
          type: integer
          maximum: 1024
          minimum: 1
        bandwidthUnits:
          $ref: '#/components/schemas/BandwidthUnits'
    BandwidthUnits:
      type: string
      enum:
      - gbps
      - mbps
      example: gbps
      default: gbps
    FixConnectionState:
      type: string
      enum:
      - Active
      - ChangeRequested
      - Inactive
    ConnectionType:
      type: string
      enum:
      - cloud
      - internet
      - interRegion
      - private
      example: cloud
    Active:
      type: boolean
      default: false
    crossCloudEnabled:
      description: Enable or disable outbound transitive (cross-cloud) routing.
      type: boolean
      default: false
    ErrorBadRequest:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: number
        error:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
      additionalProperties: false
      example:
        timestamp: '2021-01-30T08:30:00Z'
        status: 400
        error: Provided request is invalid
        message: Bad Request
        detail: Valid request is required
        path: /the/called/path-here
  securitySchemes:
    defaultAuthorizer:
      description: Default custom authorizer
      type: apiKey
      name: Authorization
      in: header
    orgContextAuthorizer:
      description: Custom Authorizer that will validate X-Organization-Id header within
        organization context
      type: apiKey
      name: Authorization
      in: header
    userManagementAuthorizer:
      description: Default custom authorizer
      type: apiKey
      name: Authorization
      in: header
security:
- orgContextAuthorizer: []
